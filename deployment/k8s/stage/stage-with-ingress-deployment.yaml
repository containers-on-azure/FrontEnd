apiVersion: v1
kind: Namespace
metadata:
   name: stage2
   labels:
     name: stage2
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: frontend-stage-web
  namespace: stage2
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        component: frontend-api
    spec:
      containers:
      - name: frontend-api
        image: #{DOCKER_REGISTRY}#/frontendapi:#{PROJECT_VERSION}#.#{Build.BuildId}#
        imagePullPolicy: Always
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-stage-api
  namespace: stage2
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        component: frontend-web
    spec:
      containers:
      - name: frontend-web
        image: #{DOCKER_REGISTRY}#/frontendweb:#{PROJECT_VERSION}#.#{Build.BuildId}#
        imagePullPolicy: Always
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-web
  namespace: stage2
  labels:
    app: frontend
    component: frontend-web
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    component: frontend-web
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-api
  namespace: stage2
  labels:
    app: frontend
    component: frontend-api
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    component: frontend-api
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: frontend-web
  namespace: stage2
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: stage2.#{DNS_ZONE}#
    http:
      paths:
      - backend:
          serviceName: frontend-web
          servicePort: 80
        path: /